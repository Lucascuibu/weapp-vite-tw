import { UserConfig, UserConfigFnObject, UserConfigExport } from 'vite';
import { WatchOptions as WatchOptions$1 } from 'chokidar';

interface SubPackage {
    pages: string[];
    root: string;
    independent?: boolean;
    entry?: string;
    name?: string;
}
interface WatchOptions extends WatchOptions$1 {
    paths?: ReadonlyArray<string>;
}
interface WeappViteConfig {
    srcRoot?: string;
    type?: 'app' | 'subPackage';
    /**
     * 使用 subPackage 打包模式使用，传入配置
     */
    subPackage?: Partial<SubPackage>;
    /**
     * 使用 app 打包模式使用，传入配置用于进行独立监听
     */
    subPackagesConfig?: Record<string, Partial<SubPackage>>;
    watch?: WatchOptions;
}

declare module 'vite' {
    interface UserConfig {
        weapp?: WeappViteConfig;
    }
}
declare function defineConfig(config: UserConfig): UserConfig;
declare function defineConfig(config: Promise<UserConfig>): Promise<UserConfig>;
declare function defineConfig(config: UserConfigFnObject): UserConfigFnObject;
declare function defineConfig(config: UserConfigExport): UserConfigExport;

export { type SubPackage as S, defineConfig as d };
