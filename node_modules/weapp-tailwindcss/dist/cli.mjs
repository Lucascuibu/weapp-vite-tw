import process from 'node:process';
import semver from 'semver';
import { g as getOptions } from './options-GppthPlx.mjs';
import { W as WEAPP_TW_REQUIRED_NODE_VERSION } from './index-szMvMylQ.mjs';
import 'magic-string';
import '@babel/generator';
import '@babel/traverse';
import '@babel/parser';
import '@weapp-core/escape';
import '@ast-core/escape';
import './defaults-w3rlKQwe.mjs';
import './defu-n46TJT6t.mjs';
import './replace.mjs';
import './shared-DbJl6i6a.mjs';
import '@weapp-core/regex';
import '@tailwindcss-mangle/shared';
import 'lru-cache';
import 'md5';
import 'postcss';
import '@babel/types';
import 'htmlparser2';
import 'node:path';
import 'tailwindcss-patch';
import '@csstools/postcss-is-pseudo-class';
import 'postcss-rem-to-responsive-pixel';
import 'postcss-selector-parser';

process.title = 'node (weapp-tailwindcss)';
const args = process.argv.slice(2);
if (semver.lt(process.versions.node, WEAPP_TW_REQUIRED_NODE_VERSION)) {
    console.error(`You are using Node.js ${process.versions.node}. For weapp-tailwindcss, Node.js version >= v${WEAPP_TW_REQUIRED_NODE_VERSION} is required.`);
    process.exit(1);
}
const command = args[0];
if (command === 'patch') {
    const options = getOptions();
    options.patch();
}
else {
    try {
        import('@weapp-tailwindcss/cli').then(({ createCli }) => {
            createCli().parse();
        });
    }
    catch (error) {
        console.warn('请先安装 `@weapp-tailwindcss/cli` , 安装完成后再尝试运行！');
        throw error;
    }
}
